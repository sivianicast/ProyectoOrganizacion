/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import BaseDatos.ConeccionBaseDatos;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;

/**
 *
 * @author siviany
 */
public class Menu extends javax.swing.JFrame {

    public static String idSountrack = "";
    String respOscarCancion = "";
    String respOscarBanda = "";

    public static DefaultTableModel tabla = new DefaultTableModel();

    public boolean isCellEditable(int Fila, int Colum) {
        return false;
    }

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        cargarTitulosColumas();
        cargarDatos();
        Login x = new Login();
        if (x.PrivilegioUsuario) {
            bloqueoUsuario();
        }
        this.jButtonSubmenu.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jBottonVoverLogin = new javax.swing.JButton();
        nombrePelicula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        añoCreacionPelicula = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        directorPelicula = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        linkIMDB = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        generoPelicula = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        nombreSoundtrack = new javax.swing.JTextField();
        interpreteSoundtrack = new javax.swing.JTextField();
        totalPistas = new javax.swing.JTextField();
        bandaSonora = new javax.swing.JTextField();
        interpreteBanda = new javax.swing.JTextField();
        autorBanda = new javax.swing.JTextField();
        siiOscarCancion = new javax.swing.JRadioButton();
        noOscarCancion = new javax.swing.JRadioButton();
        siOscarBanda = new javax.swing.JRadioButton();
        noOscarBanda = new javax.swing.JRadioButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonSubmenu = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonMostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jTxId = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre de la pelicula:");

        jBottonVoverLogin.setText("Cambiar de Usuario");
        jBottonVoverLogin.setNextFocusableComponent(id);
        jBottonVoverLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBottonVoverLoginActionPerformed(evt);
            }
        });

        nombrePelicula.setNextFocusableComponent(añoCreacionPelicula);
        nombrePelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombrePeliculaActionPerformed(evt);
            }
        });
        nombrePelicula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombrePeliculaKeyTyped(evt);
            }
        });

        jLabel2.setText("Año de creacion ");

        añoCreacionPelicula.setNextFocusableComponent(directorPelicula);
        añoCreacionPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añoCreacionPeliculaActionPerformed(evt);
            }
        });
        añoCreacionPelicula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                añoCreacionPeliculaKeyTyped(evt);
            }
        });

        jLabel3.setText("Director:");

        directorPelicula.setNextFocusableComponent(linkIMDB);
        directorPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directorPeliculaActionPerformed(evt);
            }
        });
        directorPelicula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                directorPeliculaKeyTyped(evt);
            }
        });

        jLabel6.setText("Link de IMDB:");

        linkIMDB.setNextFocusableComponent(generoPelicula);
        linkIMDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkIMDBActionPerformed(evt);
            }
        });
        linkIMDB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                linkIMDBKeyTyped(evt);
            }
        });

        jLabel7.setText("Genero:");

        generoPelicula.setNextFocusableComponent(nombreSoundtrack);
        generoPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generoPeliculaActionPerformed(evt);
            }
        });
        generoPelicula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                generoPeliculaKeyTyped(evt);
            }
        });

        jLabel8.setText("Nombre del Soundtrack principal:");

        jLabel9.setText("Interprete(es):");

        jLabel10.setText("Total de pistas:");

        jLabel11.setText("Ganador de Oscar a mejor cancion original:");

        jLabel12.setText("Interprete(es):");

        jLabel13.setText("Banda Sonora:");

        jLabel14.setText("Autor:");

        jLabel15.setText("Ganador de Oscar mejor banda sonora:");

        nombreSoundtrack.setNextFocusableComponent(interpreteSoundtrack);
        nombreSoundtrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreSoundtrackActionPerformed(evt);
            }
        });
        nombreSoundtrack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreSoundtrackKeyTyped(evt);
            }
        });

        interpreteSoundtrack.setNextFocusableComponent(totalPistas);
        interpreteSoundtrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interpreteSoundtrackActionPerformed(evt);
            }
        });
        interpreteSoundtrack.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                interpreteSoundtrackKeyTyped(evt);
            }
        });

        totalPistas.setNextFocusableComponent(siiOscarCancion);
        totalPistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPistasActionPerformed(evt);
            }
        });
        totalPistas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                totalPistasKeyTyped(evt);
            }
        });

        bandaSonora.setNextFocusableComponent(interpreteBanda);
        bandaSonora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bandaSonoraActionPerformed(evt);
            }
        });
        bandaSonora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bandaSonoraKeyTyped(evt);
            }
        });

        interpreteBanda.setNextFocusableComponent(autorBanda);
        interpreteBanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                interpreteBandaActionPerformed(evt);
            }
        });
        interpreteBanda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                interpreteBandaKeyTyped(evt);
            }
        });

        autorBanda.setNextFocusableComponent(siOscarBanda);
        autorBanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autorBandaActionPerformed(evt);
            }
        });
        autorBanda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                autorBandaKeyTyped(evt);
            }
        });

        siiOscarCancion.setText("SI");
        siiOscarCancion.setNextFocusableComponent(noOscarCancion);
        siiOscarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siiOscarCancionActionPerformed(evt);
            }
        });

        noOscarCancion.setText("NO");
        noOscarCancion.setNextFocusableComponent(bandaSonora);
        noOscarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOscarCancionActionPerformed(evt);
            }
        });

        siOscarBanda.setText("SI");
        siOscarBanda.setNextFocusableComponent(noOscarBanda);
        siOscarBanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siOscarBandaActionPerformed(evt);
            }
        });

        noOscarBanda.setText("NO");
        noOscarBanda.setNextFocusableComponent(jButtonGuardar);
        noOscarBanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noOscarBandaActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.setNextFocusableComponent(jButtonEliminar);
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Agregar Nuevo");
        jButtonGuardar.setNextFocusableComponent(jButton1);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonSubmenu.setText(" Canciones Soundtrack");
        jButtonSubmenu.setNextFocusableComponent(jBottonVoverLogin);
        jButtonSubmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmenuActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setNextFocusableComponent(jButtonSubmenu);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonMostrar.setText("Mostrar");
        jButtonMostrar.setNextFocusableComponent(jButtonModificar);
        jButtonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "Title 13", "Title 14"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Imgrese id para una de las siguientes acciones");

        jTxId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxIdKeyTyped(evt);
            }
        });

        jButton1.setText("Limpiar Datos");
        jButton1.setNextFocusableComponent(jButtonMostrar);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Id solo para agreagar datos:");

        id.setNextFocusableComponent(nombrePelicula);
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idKeyTyped(evt);
            }
        });

        jLabel17.setText("Ingrese id superior y mostrar para luego ir al Menu Canciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel17))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nombrePelicula, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(id)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jBottonVoverLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(linkIMDB, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(directorPelicula, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(añoCreacionPelicula, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generoPelicula)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(interpreteBanda, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bandaSonora, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalPistas, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(interpreteSoundtrack, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreSoundtrack, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(autorBanda)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(siiOscarCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(noOscarCancion)
                                .addGap(58, 58, 58))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(siOscarBanda)
                                    .addComponent(jButton1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButtonGuardar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(noOscarBanda)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonMostrar)
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTxId, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonModificar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonEliminar))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonSubmenu)
                                .addGap(60, 60, 60))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(29, 29, 29)))))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(nombreSoundtrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(interpreteSoundtrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(nombrePelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(totalPistas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(añoCreacionPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(siiOscarCancion)
                            .addComponent(noOscarCancion)
                            .addComponent(jLabel3)
                            .addComponent(directorPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonModificar)
                            .addComponent(jButtonMostrar)
                            .addComponent(jButtonEliminar))))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(bandaSonora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(interpreteBanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jLabel5)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(linkIMDB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(autorBanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(generoPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(siOscarBanda)
                    .addComponent(noOscarBanda)
                    .addComponent(jLabel15))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBottonVoverLogin)
                    .addComponent(jButtonGuardar)
                    .addComponent(jButton1)
                    .addComponent(jButtonSubmenu))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombrePeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombrePeliculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombrePeliculaActionPerformed

    private void añoCreacionPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añoCreacionPeliculaActionPerformed

    }//GEN-LAST:event_añoCreacionPeliculaActionPerformed

    private void directorPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directorPeliculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_directorPeliculaActionPerformed

    private void nombreSoundtrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreSoundtrackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreSoundtrackActionPerformed

    private void interpreteSoundtrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interpreteSoundtrackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interpreteSoundtrackActionPerformed

    private void totalPistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPistasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPistasActionPerformed

    private void bandaSonoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bandaSonoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bandaSonoraActionPerformed

    private void interpreteBandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_interpreteBandaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_interpreteBandaActionPerformed

    private void autorBandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autorBandaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_autorBandaActionPerformed

    private void noOscarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOscarCancionActionPerformed
        this.siiOscarCancion.setSelected(false);
        respOscarCancion = this.noOscarCancion.getText(); 
    }//GEN-LAST:event_noOscarCancionActionPerformed

    private void siOscarBandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siOscarBandaActionPerformed
        this.noOscarBanda.setSelected(false);
        respOscarBanda = this.siOscarBanda.getText();
    }//GEN-LAST:event_siOscarBandaActionPerformed

    private void noOscarBandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noOscarBandaActionPerformed
        this.siOscarBanda.setSelected(false);
        respOscarBanda = this.noOscarBanda.getText();
    }//GEN-LAST:event_noOscarBandaActionPerformed

    private void jBottonVoverLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBottonVoverLoginActionPerformed
        tabla.setColumnCount(0); //para limpiar los datos de la tabla columnas
        tabla.setRowCount(0); //para limpiar los datos de la tabla filas
        Login objLogin = new Login();
        objLogin.setVisible(true);
        dispose();
    }//GEN-LAST:event_jBottonVoverLoginActionPerformed

    private void linkIMDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkIMDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linkIMDBActionPerformed

    private void generoPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generoPeliculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generoPeliculaActionPerformed

    private void siiOscarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siiOscarCancionActionPerformed
        this.noOscarCancion.setSelected(false);
        respOscarCancion = this.siiOscarCancion.getText();
    }//GEN-LAST:event_siiOscarCancionActionPerformed

    private void jButtonSubmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmenuActionPerformed
        tabla.setColumnCount(0); //para limpiar los datos de la tabla columnas
        tabla.setRowCount(0); //para limpiar los datos de la tabla filas
        SubMenu objSubMenu = new SubMenu();
        objSubMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonSubmenuActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        if (jTxId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo ID esta vacio");
        } else {
            String option[] = {"Eliminar", "Cancelar"};
            int elegir = JOptionPane.showOptionDialog(rootPane, "Desea Eliminar", "Modificar", 0, 0, null, option, rootPane);
            if (elegir == JOptionPane.YES_NO_OPTION) {
                String eliminar = "DELETE From Principal WHERE Id=" + this.jTxId.getText();  
                ConeccionBaseDatos conbase = new ConeccionBaseDatos();
                try {
                    conbase.sentencia.executeUpdate(eliminar);
                } catch (SQLException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "Eliminacion exitoso");
                tabla.setColumnCount(0); //para limpiar los datos de la tabla columnas
                tabla.setRowCount(0); //para limpiar los datos de la tabla filas
                cargarTitulosColumas();
                cargarDatos();
            } else {
                if (elegir == JOptionPane.NO_OPTION) {
                    JOptionPane.showMessageDialog(rootPane, "No se hizo la Eliminacion");
                }
            }
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarActionPerformed
        idSountrack = jTxId.getText();
        if (jTxId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo ID esta vacio");
        } else {
            String sql = "Select* From Principal Where Id=" + this.jTxId.getText();
            try {
                ConeccionBaseDatos conbase = new ConeccionBaseDatos();
                ResultSet resultado = conbase.sentencia.executeQuery(sql);
                if (resultado.next()) {
                    this.nombrePelicula.setText(resultado.getString("Nombre_pelicula"));
                    this.añoCreacionPelicula.setText(resultado.getString("Año_Creacion"));
                    this.directorPelicula.setText(resultado.getString("Director"));
                    this.linkIMDB.setText(resultado.getString("Link_IBDM"));
                    this.generoPelicula.setText(resultado.getString("Genero"));
                    this.nombreSoundtrack.setText(resultado.getString("Soundtranck"));
                    this.interpreteSoundtrack.setText(resultado.getString("Interprete_Sound"));
                    this.totalPistas.setText(resultado.getString("Pistas"));
                    if (resultado.getString("Oscar_Cancion").equalsIgnoreCase("SI")) {
                        this.siiOscarCancion.setSelected(true);
                        this.noOscarCancion.setSelected(false);
                    } else {
                        this.noOscarCancion.setSelected(true);
                        this.siiOscarCancion.setSelected(false);
                    }
                    respOscarCancion = resultado.getString("Oscar_Cancion");
                    respOscarBanda = resultado.getString("Oscar_Banda");
                    this.bandaSonora.setText(resultado.getString("Banda_Sonora"));
                    this.interpreteBanda.setText(resultado.getString("Inteprete_Banda"));
                    this.autorBanda.setText(resultado.getString("Autor"));
                    if (resultado.getString("Oscar_Banda").equalsIgnoreCase("SI")) {
                        this.siOscarBanda.setSelected(true);
                        this.noOscarBanda.setSelected(false);
                    } else {
                        this.noOscarBanda.setSelected(true);
                        this.siOscarBanda.setSelected(false);
                    }
                    this.jButtonSubmenu.setEnabled(true);
                } else {
                    this.jButtonSubmenu.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "La id no existe");
                }
            } catch (SQLException ex) {
                //Mensaje que saldrá cuando ocurra un error al ingresar los datos
                JOptionPane.showMessageDialog(null, "Error, sus datos no fueron ingresados\n" + ex);
            }
        }
    }//GEN-LAST:event_jButtonMostrarActionPerformed
    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        if (this.id.getText().equals("") || this.nombrePelicula.getText().equals("") || this.añoCreacionPelicula.getText().equals("") || this.directorPelicula.getText().equals("")
                || this.linkIMDB.getText().equals("") || this.generoPelicula.getText().equals("") || this.nombreSoundtrack.getText().equals("")
                || this.interpreteSoundtrack.getText().equals("") || this.totalPistas.getText().equals("") || this.bandaSonora.getText().equals("")
                || this.interpreteBanda.getText().equals("") || this.autorBanda.getText().equals("") || this.respOscarCancion.equals("")
                || this.respOscarBanda.equals("")) {
            JOptionPane.showMessageDialog(null, "Hay campos vacidos, vuelva a intentar");
        } else {
            String idSountrack = this.id.getText();
            String nombrePelicula = this.nombrePelicula.getText();
            String AñoPelicula = this.añoCreacionPelicula.getText();
            String DirectorPelicula = this.directorPelicula.getText();
            String linkIMDB = this.linkIMDB.getText();
            String Genero = this.generoPelicula.getText();
            String nombreSoundtrack = this.nombreSoundtrack.getText();
            String InterpreteSoudtrack = this.interpreteSoundtrack.getText();
            String pistas = this.totalPistas.getText();
            String oscarCancion = respOscarCancion;
            String bandaSonora = this.bandaSonora.getText();
            String interpreteBandad = this.interpreteBanda.getText();
            String autor = this.autorBanda.getText();
            String oscarBanda = respOscarBanda;
            String sql = "insert into Principal(Id,Nombre_pelicula,Año_Creacion,Director,Link_IBDM,Genero,Soundtranck,Interprete_Sound,Pistas,"
                    + "Oscar_Cancion,Banda_Sonora,Inteprete_Banda,Autor,Oscar_Banda) values " + "('" + idSountrack + "','" + nombrePelicula + "','" + AñoPelicula
                    + "','" + DirectorPelicula + "','" + linkIMDB + "','" + Genero + "','" + nombreSoundtrack + "','" + InterpreteSoudtrack
                    + "','" + pistas + "','" + oscarCancion + "','" + bandaSonora + "','" + interpreteBandad + "','" + autor + "','" + oscarBanda + "')";
            try {
                ConeccionBaseDatos conbase = new ConeccionBaseDatos();
                conbase.sentencia.executeUpdate(sql);
            } catch (SQLException ex) {
                //Mensaje que saldrá cuando ocurra un error al ingresar los datos
                JOptionPane.showMessageDialog(null, "Error, sus datos no fueron ingresados\n" + ex);
            }
//        initComponents();
            tabla.setColumnCount(0); //para limpiar los datos de la tabla columnas
            tabla.setRowCount(0); //para limpiar los datos de la tabla filas
            cargarTitulosColumas();
            cargarDatos();
            JOptionPane.showMessageDialog(null, "Sountrank agregado");
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        if (jTxId.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo ID esta vacio");
        } else {
            String option[] = {"Modificar", "Cancelar"};
            int elegir = JOptionPane.showOptionDialog(rootPane, "Desea modificar", "Modificar", 0, 0, null, option, rootPane);
            if (elegir == JOptionPane.YES_NO_OPTION) {
                String editar = "Update Principal set Nombre_pelicula='" + this.nombrePelicula.getText() + "'," + "Año_Creacion='" + this.añoCreacionPelicula.getText() + "',"
                        + "Director='" + this.directorPelicula.getText() + "'," + "Link_IBDM='" + this.linkIMDB.getText() + "'," + "Genero='" + this.generoPelicula.getText() + "',"
                        + "Soundtranck='" + this.nombreSoundtrack.getText() + "'," + "Interprete_Sound='" + this.interpreteSoundtrack.getText() + "'," + "Pistas='" + this.totalPistas.getText() + "',"
                        + "Oscar_Cancion='" + this.respOscarCancion + "'," + "Banda_Sonora='" + this.bandaSonora.getText() + "'," + "Inteprete_Banda='" + this.interpreteBanda.getText() + "',"
                        + "Autor='" + this.autorBanda.getText() + "'," + "Oscar_Banda='" + this.respOscarBanda + "'" + " Where Id=" + this.jTxId.getText() + " ";
                ConeccionBaseDatos conbase = new ConeccionBaseDatos();
                try {
                    conbase.sentencia.executeUpdate(editar);
                } catch (SQLException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "Modificacion exitoso");
                tabla.setColumnCount(0); //para limpiar los datos de la tabla columnas
                tabla.setRowCount(0); //para limpiar los datos de la tabla filas
                cargarTitulosColumas();
                cargarDatos();
            } else {
                if (elegir == JOptionPane.NO_OPTION) {
                    JOptionPane.showMessageDialog(rootPane, "No se hizo la modificacion");
                }
            }
        }
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpiarDatos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed

    }//GEN-LAST:event_idActionPerformed

    private void idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyTyped
        char validat = evt.getKeyChar();// validar que un jtex no resiva text
        if (Character.isLetter(validat)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "No se permite texto, solo numeros");
        }
    }//GEN-LAST:event_idKeyTyped

    private void jTxIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxIdKeyTyped
        char validat = evt.getKeyChar();// validar que un jtex no resiva text
        if (Character.isLetter(validat)) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "No se permite texto, solo numeros");
        }
    }//GEN-LAST:event_jTxIdKeyTyped

    private void nombrePeliculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombrePeliculaKeyTyped
        maxlength(this.nombrePelicula.getText(), evt);
    }//GEN-LAST:event_nombrePeliculaKeyTyped

    private void añoCreacionPeliculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_añoCreacionPeliculaKeyTyped
        maxlength(this.añoCreacionPelicula.getText(), evt);
    }//GEN-LAST:event_añoCreacionPeliculaKeyTyped

    private void directorPeliculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_directorPeliculaKeyTyped
        maxlength(this.directorPelicula.getText(), evt);
    }//GEN-LAST:event_directorPeliculaKeyTyped

    private void linkIMDBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_linkIMDBKeyTyped
        maxlength(this.linkIMDB.getText(), evt);
    }//GEN-LAST:event_linkIMDBKeyTyped

    private void generoPeliculaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_generoPeliculaKeyTyped
        maxlength(this.generoPelicula.getText(), evt);
    }//GEN-LAST:event_generoPeliculaKeyTyped

    private void nombreSoundtrackKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreSoundtrackKeyTyped
        maxlength(this.nombreSoundtrack.getText(), evt);
    }//GEN-LAST:event_nombreSoundtrackKeyTyped

    private void interpreteSoundtrackKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_interpreteSoundtrackKeyTyped
        maxlength(this.interpreteSoundtrack.getText(), evt);
    }//GEN-LAST:event_interpreteSoundtrackKeyTyped

    private void totalPistasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalPistasKeyTyped
        maxlength(this.totalPistas.getText(), evt);
    }//GEN-LAST:event_totalPistasKeyTyped

    private void bandaSonoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bandaSonoraKeyTyped
        maxlength(this.bandaSonora.getText(), evt);
    }//GEN-LAST:event_bandaSonoraKeyTyped

    private void interpreteBandaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_interpreteBandaKeyTyped
        maxlength(this.interpreteBanda.getText(), evt);
    }//GEN-LAST:event_interpreteBandaKeyTyped

    private void autorBandaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_autorBandaKeyTyped
        maxlength(this.autorBanda.getText(), evt);
    }//GEN-LAST:event_autorBandaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField autorBanda;
    private javax.swing.JTextField añoCreacionPelicula;
    private javax.swing.JTextField bandaSonora;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JTextField directorPelicula;
    private javax.swing.JTextField generoPelicula;
    private javax.swing.JTextField id;
    private javax.swing.JTextField interpreteBanda;
    private javax.swing.JTextField interpreteSoundtrack;
    private javax.swing.JButton jBottonVoverLogin;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonMostrar;
    private javax.swing.JButton jButtonSubmenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField jTxId;
    private javax.swing.JTextField linkIMDB;
    private javax.swing.JRadioButton noOscarBanda;
    private javax.swing.JRadioButton noOscarCancion;
    private javax.swing.JTextField nombrePelicula;
    private javax.swing.JTextField nombreSoundtrack;
    private javax.swing.JRadioButton siOscarBanda;
    private javax.swing.JRadioButton siiOscarCancion;
    private javax.swing.JTextField totalPistas;
    // End of variables declaration//GEN-END:variables
    public void bloqueoUsuario() {//metodo bloqueo de teclas
        jButtonGuardar.setEnabled(false);
        jButtonModificar.setEnabled(false);
        jButtonEliminar.setEnabled(false);
    }

    public void cargarTitulosColumas() {
        tabla.addColumn("ID");
        tabla.addColumn("Nombre_pelicula");
        tabla.addColumn("Año_Creacion");
        tabla.addColumn("Director");
        tabla.addColumn("Link_IBDM");
        tabla.addColumn("Genero");
        tabla.addColumn("Soundtranck");
        tabla.addColumn("Interprete_Sound");
        tabla.addColumn("Pistas");
        tabla.addColumn("Oscar_Cancion");
        tabla.addColumn("Banda_Sonora");
        tabla.addColumn("Inteprete_Banda");
        tabla.addColumn("Autor");
        tabla.addColumn("Oscar_Banda");
        this.jTable1.setModel(tabla);
    }

    public void cargarDatos() {
        //Variable que almacena los datos de la consulta
        String sql = "select Id,Nombre_pelicula,Año_Creacion,Director,Link_IBDM,Genero,Soundtranck,Interprete_Sound,Pistas,Oscar_Cancion,Banda_Sonora,Inteprete_Banda,Autor,Oscar_Banda from Principal";  //Consulta sql
        try {
            ConeccionBaseDatos objConeccionBaseDatos = new ConeccionBaseDatos();
            ResultSet resultado = objConeccionBaseDatos.sentencia.executeQuery(sql);  //Linea que ejecuta la consulta sql y almacena los datos en resultado
            while (resultado.next()) {                                    //Bucle que recorre la consulta obtenida
//                String datos[] = new String[14]; 
                ArrayList<String> datos = new ArrayList<>();
                datos.add(resultado.getString("Id"));
                datos.add(resultado.getString("Nombre_pelicula"));
                datos.add(resultado.getString("Año_Creacion"));
                datos.add(resultado.getString("Director"));
                datos.add(resultado.getString("Link_IBDM"));
                datos.add(resultado.getString("Genero"));
                datos.add(resultado.getString("Soundtranck"));
                datos.add(resultado.getString("Interprete_Sound"));
                datos.add(resultado.getString("Pistas"));
                datos.add(resultado.getString("Oscar_Cancion"));
                datos.add(resultado.getString("Banda_Sonora"));
                datos.add(resultado.getString("Inteprete_Banda"));
                datos.add(resultado.getString("Autor"));
                datos.add(resultado.getString("Oscar_Banda"));
                datos.add(resultado.getString("Director"));
                datos.add(resultado.getString("Director"));
                tabla.addRow(datos.toArray());
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar los Datos\n" + ex);
        }
    }

    public void limpiarDatos() {
        this.nombrePelicula.setText(null);
        this.añoCreacionPelicula.setText(null);
        this.directorPelicula.setText(null);
        this.linkIMDB.setText(null);
        this.generoPelicula.setText(null);
        this.nombreSoundtrack.setText(null);
        this.interpreteSoundtrack.setText(null);
        this.totalPistas.setText(null);
        this.bandaSonora.setText(null);
        this.interpreteBanda.setText(null);
        this.autorBanda.setText(null);
        this.siOscarBanda.setSelected(false);
        this.noOscarBanda.setSelected(false);
        this.siiOscarCancion.setSelected(false);
        this.noOscarCancion.setSelected(false);
    }

    public void maxlength(String txtFiled, java.awt.event.KeyEvent evt) {
        int maximoTamaño = 20;
        if (txtFiled.length() >= maximoTamaño) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Maximo 20 caracteres");
        }
    }
}
